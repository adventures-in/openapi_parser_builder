{
  "paths" : {
    "/v1/ageRatingDeclarations/{id}" : {
      "patch" : {
        "tags" : [ "AgeRatingDeclarations" ],
        "operationId" : "ageRatingDeclarations-update_instance",
        "requestBody" : {
          "description" : "AgeRatingDeclaration representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgeRatingDeclarationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AgeRatingDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-get_collection",
        "parameters" : [ {
          "name" : "filter[platforms]",
          "in" : "query",
          "description" : "filter by attribute 'platforms'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "exists[parent]",
          "in" : "query",
          "description" : "filter by existence or non-existence of related 'parent'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppCategories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCategories/{id}" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-get_instance",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-get_collection",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppEncryptionDeclarations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEncryptionDeclarations/{id}" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-get_instance",
        "parameters" : [ {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEncryptionDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfoLocalizations" : {
      "post" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppInfoLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppInfoLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppInfoLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appInfoLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfoLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppInfoLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppInfoLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfoLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-get_instance",
        "parameters" : [ {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appInfoLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appInfoLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfo",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-update_instance",
        "requestBody" : {
          "description" : "AppInfo representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppInfoUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfo",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreOrders" : {
      "post" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-create_instance",
        "requestBody" : {
          "description" : "AppPreOrder representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreOrderCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreOrders/{id}" : {
      "get" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-get_instance",
        "parameters" : [ {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-update_instance",
        "requestBody" : {
          "description" : "AppPreOrder representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreOrderUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviewSets" : {
      "post" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-create_instance",
        "requestBody" : {
          "description" : "AppPreviewSet representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewSetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPreviewSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreviewSets/{id}" : {
      "get" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-get_instance",
        "parameters" : [ {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviews", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviews", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appPreviews]",
          "in" : "query",
          "description" : "maximum number of related appPreviews returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreviewSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviews" : {
      "post" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-create_instance",
        "requestBody" : {
          "description" : "AppPreview representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPreview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreviews/{id}" : {
      "get" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-get_instance",
        "parameters" : [ {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-update_instance",
        "requestBody" : {
          "description" : "AppPreview representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPricePoints" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-get_collection",
        "parameters" : [ {
          "name" : "filter[priceTier]",
          "in" : "query",
          "description" : "filter by id(s) of related 'priceTier'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "priceTier", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPricePoints/{id}" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-get_instance",
        "parameters" : [ {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "priceTier", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPricePoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceTiers" : {
      "get" : {
        "tags" : [ "AppPriceTiers" ],
        "operationId" : "appPriceTiers-get_collection",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[pricePoints]",
          "in" : "query",
          "description" : "maximum number of related pricePoints returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPriceTiers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceTiersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPriceTiers/{id}" : {
      "get" : {
        "tags" : [ "AppPriceTiers" ],
        "operationId" : "appPriceTiers-get_instance",
        "parameters" : [ {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[pricePoints]",
          "in" : "query",
          "description" : "maximum number of related pricePoints returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPriceTier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceTierResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPrices/{id}" : {
      "get" : {
        "tags" : [ "AppPrices" ],
        "operationId" : "appPrices-get_instance",
        "parameters" : [ {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPrice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshotSets" : {
      "post" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-create_instance",
        "requestBody" : {
          "description" : "AppScreenshotSet representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotSetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppScreenshotSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appScreenshotSets/{id}" : {
      "get" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-get_instance",
        "parameters" : [ {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshots", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshots", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppScreenshotSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshots" : {
      "post" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-create_instance",
        "requestBody" : {
          "description" : "AppScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appScreenshots/{id}" : {
      "get" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-get_instance",
        "parameters" : [ {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-update_instance",
        "requestBody" : {
          "description" : "AppScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewAttachments" : {
      "post" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-create_instance",
        "requestBody" : {
          "description" : "AppStoreReviewAttachment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewAttachmentCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreReviewAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreReviewAttachments/{id}" : {
      "get" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-update_instance",
        "requestBody" : {
          "description" : "AppStoreReviewAttachment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewAttachmentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewDetails" : {
      "post" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-create_instance",
        "requestBody" : {
          "description" : "AppStoreReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewDetailCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreReviewDetails/{id}" : {
      "get" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "maximum number of related appStoreReviewAttachments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-update_instance",
        "requestBody" : {
          "description" : "AppStoreReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations" : {
      "post" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshots", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviews", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appPreviewSets]",
          "in" : "query",
          "description" : "maximum number of related appPreviewSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appScreenshotSets]",
          "in" : "query",
          "description" : "maximum number of related appScreenshotSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersionLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionPhasedReleases" : {
      "post" : {
        "tags" : [ "AppStoreVersionPhasedReleases" ],
        "operationId" : "appStoreVersionPhasedReleases-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionPhasedRelease representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionPhasedRelease",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionPhasedReleases/{id}" : {
      "patch" : {
        "tags" : [ "AppStoreVersionPhasedReleases" ],
        "operationId" : "appStoreVersionPhasedReleases-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersionPhasedRelease representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionPhasedRelease",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionPhasedReleases" ],
        "operationId" : "appStoreVersionPhasedReleases-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionSubmissions" : {
      "post" : {
        "tags" : [ "AppStoreVersionSubmissions" ],
        "operationId" : "appStoreVersionSubmissions-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionSubmissions/{id}" : {
      "delete" : {
        "tags" : [ "AppStoreVersionSubmissions" ],
        "operationId" : "appStoreVersionSubmissions-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions" : {
      "post" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersion representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersions/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "idfaDeclaration", "routingAppCoverage" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[idfaDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type idfaDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "attributesActionWithPreviousAd", "attributesAppInstallationToPreviousAd", "honorsLimitedAdTracking", "servesAds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersion representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-get_collection",
        "parameters" : [ {
          "name" : "filter[appStoreVersions.appStoreState]",
          "in" : "query",
          "description" : "filter by attribute 'appStoreVersions.appStoreState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DEVELOPER_REMOVED_FROM_SALE", "DEVELOPER_REJECTED", "IN_REVIEW", "INVALID_BINARY", "METADATA_REJECTED", "PENDING_APPLE_RELEASE", "PENDING_CONTRACT", "PENDING_DEVELOPER_RELEASE", "PREPARE_FOR_SUBMISSION", "PREORDER_READY_FOR_SALE", "PROCESSING_FOR_APP_STORE", "READY_FOR_SALE", "REJECTED", "REMOVED_FROM_SALE", "WAITING_FOR_EXPORT_COMPLIANCE", "WAITING_FOR_REVIEW", "REPLACED_WITH_NEW_VERSION" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[appStoreVersions.platform]",
          "in" : "query",
          "description" : "filter by attribute 'appStoreVersions.platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[bundleId]",
          "in" : "query",
          "description" : "filter by attribute 'bundleId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[sku]",
          "in" : "query",
          "description" : "filter by attribute 'sku'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[appStoreVersions]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersions'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "exists[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "filter by existence or non-existence of related 'gameCenterEnabledVersions'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "-bundleId", "name", "-name", "sku", "-sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "builds", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "preOrder", "preReleaseVersions", "prices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appInfos]",
          "in" : "query",
          "description" : "maximum number of related appInfos returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appStoreVersions]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaAppLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "maximum number of related gameCenterEnabledVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[inAppPurchases]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[preReleaseVersions]",
          "in" : "query",
          "description" : "maximum number of related preReleaseVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Apps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{id}" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-get_instance",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "builds", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "preOrder", "preReleaseVersions", "prices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appInfos]",
          "in" : "query",
          "description" : "maximum number of related appInfos returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appStoreVersions]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaAppLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "maximum number of related gameCenterEnabledVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[inAppPurchases]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[preReleaseVersions]",
          "in" : "query",
          "description" : "maximum number of related preReleaseVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-update_instance",
        "requestBody" : {
          "description" : "App representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppLocalizations" : {
      "get" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-get_collection",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-create_instance",
        "requestBody" : {
          "description" : "BetaAppLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaAppLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppLocalizations/{id}" : {
      "get" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-update_instance",
        "requestBody" : {
          "description" : "BetaAppLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewDetails" : {
      "get" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-get_collection",
        "parameters" : [ {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppReviewDetails",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppReviewDetails/{id}" : {
      "get" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-update_instance",
        "requestBody" : {
          "description" : "BetaAppReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppReviewDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewSubmissions" : {
      "get" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-get_collection",
        "parameters" : [ {
          "name" : "filter[betaReviewState]",
          "in" : "query",
          "description" : "filter by attribute 'betaReviewState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[build]",
          "in" : "query",
          "description" : "filter by id(s) of related 'build'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppReviewSubmissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-create_instance",
        "requestBody" : {
          "description" : "BetaAppReviewSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppReviewSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaAppReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppReviewSubmissions/{id}" : {
      "get" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaBuildLocalizations" : {
      "get" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-get_collection",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[build]",
          "in" : "query",
          "description" : "filter by id(s) of related 'build'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaBuildLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-create_instance",
        "requestBody" : {
          "description" : "BetaBuildLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaBuildLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaBuildLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaBuildLocalizations/{id}" : {
      "get" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaBuildLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-update_instance",
        "requestBody" : {
          "description" : "BetaBuildLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaBuildLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaBuildLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-get_collection",
        "parameters" : [ {
          "name" : "filter[isInternalGroup]",
          "in" : "query",
          "description" : "filter by attribute 'isInternalGroup'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[publicLink]",
          "in" : "query",
          "description" : "filter by attribute 'publicLink'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[publicLinkEnabled]",
          "in" : "query",
          "description" : "filter by attribute 'publicLinkEnabled'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[publicLinkLimitEnabled]",
          "in" : "query",
          "description" : "filter by attribute 'publicLinkLimitEnabled'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "createdDate", "-createdDate", "name", "-name", "publicLinkEnabled", "-publicLinkEnabled", "publicLinkLimit", "-publicLinkLimit" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaTesters]",
          "in" : "query",
          "description" : "maximum number of related betaTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 1000
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaGroups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-create_instance",
        "requestBody" : {
          "description" : "BetaGroup representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaGroups/{id}" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-get_instance",
        "parameters" : [ {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaTesters]",
          "in" : "query",
          "description" : "maximum number of related betaTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 1000
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-update_instance",
        "requestBody" : {
          "description" : "BetaGroup representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaLicenseAgreements" : {
      "get" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-get_collection",
        "parameters" : [ {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaLicenseAgreements",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaLicenseAgreements/{id}" : {
      "get" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-get_instance",
        "parameters" : [ {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-update_instance",
        "requestBody" : {
          "description" : "BetaLicenseAgreement representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaLicenseAgreementUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesterInvitations" : {
      "post" : {
        "tags" : [ "BetaTesterInvitations" ],
        "operationId" : "betaTesterInvitations-create_instance",
        "requestBody" : {
          "description" : "BetaTesterInvitation representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterInvitationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaTesterInvitation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterInvitationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaTesters" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-get_collection",
        "parameters" : [ {
          "name" : "filter[email]",
          "in" : "query",
          "description" : "filter by attribute 'email'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[firstName]",
          "in" : "query",
          "description" : "filter by attribute 'firstName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[inviteType]",
          "in" : "query",
          "description" : "filter by attribute 'inviteType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EMAIL", "PUBLIC_LINK" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[lastName]",
          "in" : "query",
          "description" : "filter by attribute 'lastName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[apps]",
          "in" : "query",
          "description" : "filter by id(s) of related 'apps'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[betaGroups]",
          "in" : "query",
          "description" : "filter by id(s) of related 'betaGroups'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "email", "-email", "firstName", "-firstName", "inviteType", "-inviteType", "lastName", "-lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaTesters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-create_instance",
        "requestBody" : {
          "description" : "BetaTester representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaTester",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaTesters/{id}" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-get_instance",
        "parameters" : [ {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaTester",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaDetails" : {
      "get" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-get_collection",
        "parameters" : [ {
          "name" : "filter[build]",
          "in" : "query",
          "description" : "filter by id(s) of related 'build'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BuildBetaDetails",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/buildBetaDetails/{id}" : {
      "get" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BuildBetaDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-update_instance",
        "requestBody" : {
          "description" : "BuildBetaDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BuildBetaDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaNotifications" : {
      "post" : {
        "tags" : [ "BuildBetaNotifications" ],
        "operationId" : "buildBetaNotifications-create_instance",
        "requestBody" : {
          "description" : "BuildBetaNotification representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaNotificationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BuildBetaNotification",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaNotificationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/builds" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-get_collection",
        "parameters" : [ {
          "name" : "filter[betaAppReviewSubmission.betaReviewState]",
          "in" : "query",
          "description" : "filter by attribute 'betaAppReviewSubmission.betaReviewState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[expired]",
          "in" : "query",
          "description" : "filter by attribute 'expired'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[preReleaseVersion.platform]",
          "in" : "query",
          "description" : "filter by attribute 'preReleaseVersion.platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[preReleaseVersion.version]",
          "in" : "query",
          "description" : "filter by attribute 'preReleaseVersion.version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[processingState]",
          "in" : "query",
          "description" : "filter by attribute 'processingState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROCESSING", "FAILED", "INVALID", "VALID" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[usesNonExemptEncryption]",
          "in" : "query",
          "description" : "filter by attribute 'usesNonExemptEncryption'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[appStoreVersion]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersion'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[betaGroups]",
          "in" : "query",
          "description" : "filter by id(s) of related 'betaGroups'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[preReleaseVersion]",
          "in" : "query",
          "description" : "filter by id(s) of related 'preReleaseVersion'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "preReleaseVersion", "-preReleaseVersion", "uploadedDate", "-uploadedDate", "version", "-version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "buildBetaDetail", "icons", "individualTesters", "preReleaseVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[diagnosticSignatures]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type diagnosticSignatures",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "diagnosticType", "logs", "signature", "weight" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaBuildLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaBuildLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[icons]",
          "in" : "query",
          "description" : "maximum number of related icons returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[individualTesters]",
          "in" : "query",
          "description" : "maximum number of related individualTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/builds/{id}" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-get_instance",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "buildBetaDetail", "icons", "individualTesters", "preReleaseVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[diagnosticSignatures]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type diagnosticSignatures",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "diagnosticType", "logs", "signature", "weight" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaBuildLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaBuildLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[icons]",
          "in" : "query",
          "description" : "maximum number of related icons returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[individualTesters]",
          "in" : "query",
          "description" : "maximum number of related individualTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-update_instance",
        "requestBody" : {
          "description" : "Build representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIdCapabilities" : {
      "post" : {
        "tags" : [ "BundleIdCapabilities" ],
        "operationId" : "bundleIdCapabilities-create_instance",
        "requestBody" : {
          "description" : "BundleIdCapability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdCapabilityCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BundleIdCapability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdCapabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bundleIdCapabilities/{id}" : {
      "patch" : {
        "tags" : [ "BundleIdCapabilities" ],
        "operationId" : "bundleIdCapabilities-update_instance",
        "requestBody" : {
          "description" : "BundleIdCapability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdCapabilityUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleIdCapability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdCapabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BundleIdCapabilities" ],
        "operationId" : "bundleIdCapabilities-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-get_collection",
        "parameters" : [ {
          "name" : "filter[identifier]",
          "in" : "query",
          "description" : "filter by attribute 'identifier'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[seedId]",
          "in" : "query",
          "description" : "filter by attribute 'seedId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "-id", "identifier", "-identifier", "name", "-name", "platform", "-platform", "seedId", "-seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "profiles" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIdCapabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIdCapabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "capabilityType", "settings" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[bundleIdCapabilities]",
          "in" : "query",
          "description" : "maximum number of related bundleIdCapabilities returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[profiles]",
          "in" : "query",
          "description" : "maximum number of related profiles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BundleIds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-create_instance",
        "requestBody" : {
          "description" : "BundleId representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bundleIds/{id}" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-get_instance",
        "parameters" : [ {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "profiles" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIdCapabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIdCapabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "capabilityType", "settings" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[bundleIdCapabilities]",
          "in" : "query",
          "description" : "maximum number of related bundleIdCapabilities returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[profiles]",
          "in" : "query",
          "description" : "maximum number of related profiles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-update_instance",
        "requestBody" : {
          "description" : "BundleId representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/certificates" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-get_collection",
        "parameters" : [ {
          "name" : "filter[certificateType]",
          "in" : "query",
          "description" : "filter by attribute 'certificateType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS_DEVELOPMENT", "IOS_DISTRIBUTION", "MAC_APP_DISTRIBUTION", "MAC_INSTALLER_DISTRIBUTION", "MAC_APP_DEVELOPMENT", "DEVELOPER_ID_KEXT", "DEVELOPER_ID_APPLICATION", "DEVELOPMENT", "DISTRIBUTION" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[displayName]",
          "in" : "query",
          "description" : "filter by attribute 'displayName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[serialNumber]",
          "in" : "query",
          "description" : "filter by attribute 'serialNumber'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateType", "-certificateType", "displayName", "-displayName", "id", "-id", "serialNumber", "-serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Certificates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-create_instance",
        "requestBody" : {
          "description" : "Certificate representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/certificates/{id}" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-get_instance",
        "parameters" : [ {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/devices" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-get_collection",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[status]",
          "in" : "query",
          "description" : "filter by attribute 'status'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ENABLED", "DISABLED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[udid]",
          "in" : "query",
          "description" : "filter by attribute 'udid'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "-id", "name", "-name", "platform", "-platform", "status", "-status", "udid", "-udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Devices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-create_instance",
        "requestBody" : {
          "description" : "Device representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/devices/{id}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-get_instance",
        "parameters" : [ {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-update_instance",
        "requestBody" : {
          "description" : "Device representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/endUserLicenseAgreements" : {
      "post" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-create_instance",
        "requestBody" : {
          "description" : "EndUserLicenseAgreement representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndUserLicenseAgreementCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/endUserLicenseAgreements/{id}" : {
      "get" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-get_instance",
        "parameters" : [ {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[territories]",
          "in" : "query",
          "description" : "maximum number of related territories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-update_instance",
        "requestBody" : {
          "description" : "EndUserLicenseAgreement representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndUserLicenseAgreementUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/financeReports" : {
      "get" : {
        "tags" : [ "FinanceReports" ],
        "operationId" : "financeReports-get_collection",
        "parameters" : [ {
          "name" : "filter[regionCode]",
          "in" : "query",
          "description" : "filter by attribute 'regionCode'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportDate]",
          "in" : "query",
          "description" : "filter by attribute 'reportDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportType]",
          "in" : "query",
          "description" : "filter by attribute 'reportType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "FINANCIAL", "FINANCE_DETAIL" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[vendorNumber]",
          "in" : "query",
          "description" : "filter by attribute 'vendorNumber'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of FinanceReports",
            "content" : {
              "gzip" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/idfaDeclarations" : {
      "post" : {
        "tags" : [ "IdfaDeclarations" ],
        "operationId" : "idfaDeclarations-create_instance",
        "requestBody" : {
          "description" : "IdfaDeclaration representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdfaDeclarationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single IdfaDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdfaDeclarationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/idfaDeclarations/{id}" : {
      "patch" : {
        "tags" : [ "IdfaDeclarations" ],
        "operationId" : "idfaDeclarations-update_instance",
        "requestBody" : {
          "description" : "IdfaDeclaration representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdfaDeclarationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single IdfaDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdfaDeclarationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "IdfaDeclarations" ],
        "operationId" : "idfaDeclarations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchases/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-get_collection",
        "parameters" : [ {
          "name" : "filter[builds.expired]",
          "in" : "query",
          "description" : "filter by attribute 'builds.expired'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds.processingState]",
          "in" : "query",
          "description" : "filter by attribute 'builds.processingState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROCESSING", "FAILED", "INVALID", "VALID" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "version", "-version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PreReleaseVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreReleaseVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/preReleaseVersions/{id}" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PrereleaseVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrereleaseVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-get_collection",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[profileState]",
          "in" : "query",
          "description" : "filter by attribute 'profileState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "INVALID" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[profileType]",
          "in" : "query",
          "description" : "filter by attribute 'profileType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS_APP_DEVELOPMENT", "IOS_APP_STORE", "IOS_APP_ADHOC", "IOS_APP_INHOUSE", "MAC_APP_DEVELOPMENT", "MAC_APP_STORE", "MAC_APP_DIRECT", "TVOS_APP_DEVELOPMENT", "TVOS_APP_STORE", "TVOS_APP_ADHOC", "TVOS_APP_INHOUSE", "MAC_CATALYST_APP_DEVELOPMENT", "MAC_CATALYST_APP_STORE", "MAC_CATALYST_APP_DIRECT" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "-id", "name", "-name", "profileState", "-profileState", "profileType", "-profileType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "devices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[certificates]",
          "in" : "query",
          "description" : "maximum number of related certificates returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[devices]",
          "in" : "query",
          "description" : "maximum number of related devices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Profiles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfilesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-create_instance",
        "requestBody" : {
          "description" : "Profile representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/{id}" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-get_instance",
        "parameters" : [ {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "devices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[certificates]",
          "in" : "query",
          "description" : "maximum number of related certificates returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[devices]",
          "in" : "query",
          "description" : "maximum number of related devices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/routingAppCoverages" : {
      "post" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-create_instance",
        "requestBody" : {
          "description" : "RoutingAppCoverage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoutingAppCoverageCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/routingAppCoverages/{id}" : {
      "get" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-get_instance",
        "parameters" : [ {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-update_instance",
        "requestBody" : {
          "description" : "RoutingAppCoverage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoutingAppCoverageUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/salesReports" : {
      "get" : {
        "tags" : [ "SalesReports" ],
        "operationId" : "salesReports-get_collection",
        "parameters" : [ {
          "name" : "filter[frequency]",
          "in" : "query",
          "description" : "filter by attribute 'frequency'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DAILY", "WEEKLY", "MONTHLY", "YEARLY" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportDate]",
          "in" : "query",
          "description" : "filter by attribute 'reportDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[reportSubType]",
          "in" : "query",
          "description" : "filter by attribute 'reportSubType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SUMMARY", "DETAILED", "OPT_IN" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportType]",
          "in" : "query",
          "description" : "filter by attribute 'reportType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SALES", "PRE_ORDER", "NEWSSTAND", "SUBSCRIPTION", "SUBSCRIPTION_EVENT", "SUBSCRIBER" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[vendorNumber]",
          "in" : "query",
          "description" : "filter by attribute 'vendorNumber'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SalesReports",
            "content" : {
              "gzip" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/territories" : {
      "get" : {
        "tags" : [ "Territories" ],
        "operationId" : "territories-get_collection",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/userInvitations" : {
      "get" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-get_collection",
        "parameters" : [ {
          "name" : "filter[email]",
          "in" : "query",
          "description" : "filter by attribute 'email'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[roles]",
          "in" : "query",
          "description" : "filter by attribute 'roles'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADMIN", "FINANCE", "TECHNICAL", "ACCOUNT_HOLDER", "READ_ONLY", "SALES", "MARKETING", "APP_MANAGER", "DEVELOPER", "ACCESS_TO_REPORTS", "CUSTOMER_SUPPORT" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[visibleApps]",
          "in" : "query",
          "description" : "filter by id(s) of related 'visibleApps'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "email", "-email", "lastName", "-lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[userInvitations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type userInvitations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "email", "expirationDate", "firstName", "lastName", "provisioningAllowed", "roles", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of UserInvitations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInvitationsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-create_instance",
        "requestBody" : {
          "description" : "UserInvitation representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserInvitationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single UserInvitation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/userInvitations/{id}" : {
      "get" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-get_instance",
        "parameters" : [ {
          "name" : "fields[userInvitations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type userInvitations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "email", "expirationDate", "firstName", "lastName", "provisioningAllowed", "roles", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single UserInvitation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-get_collection",
        "parameters" : [ {
          "name" : "filter[roles]",
          "in" : "query",
          "description" : "filter by attribute 'roles'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADMIN", "FINANCE", "TECHNICAL", "ACCOUNT_HOLDER", "READ_ONLY", "SALES", "MARKETING", "APP_MANAGER", "DEVELOPER", "ACCESS_TO_REPORTS", "CUSTOMER_SUPPORT" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[username]",
          "in" : "query",
          "description" : "filter by attribute 'username'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[visibleApps]",
          "in" : "query",
          "description" : "filter by id(s) of related 'visibleApps'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastName", "-lastName", "username", "-username" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[users]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type users",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "firstName", "lastName", "provisioningAllowed", "roles", "username", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-get_instance",
        "parameters" : [ {
          "name" : "fields[users]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type users",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "firstName", "lastName", "provisioningAllowed", "roles", "username", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "operationId" : "users-update_instance",
        "requestBody" : {
          "description" : "User representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "operationId" : "users-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories/{id}/parent" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-parent-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories/{id}/subcategories" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-subcategories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/app" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/relationships/builds" : {
      "post" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-builds-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/appInfoLocalizations" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-appInfoLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/primaryCategory" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-primaryCategory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/primarySubcategoryOne" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-primarySubcategoryOne-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/primarySubcategoryTwo" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-primarySubcategoryTwo-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/secondaryCategory" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-secondaryCategory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/secondarySubcategoryOne" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-secondarySubcategoryOne-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/secondarySubcategoryTwo" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-secondarySubcategoryTwo-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviewSets/{id}/relationships/appPreviews" : {
      "get" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-appPreviews-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetAppPreviewsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-appPreviews-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewSetAppPreviewsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviewSets/{id}/appPreviews" : {
      "get" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-appPreviews-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviews", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPricePoints/{id}/territory" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-territory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceTiers/{id}/pricePoints" : {
      "get" : {
        "tags" : [ "AppPriceTiers" ],
        "operationId" : "appPriceTiers-pricePoints-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshotSets/{id}/relationships/appScreenshots" : {
      "get" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-appScreenshots-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-appScreenshots-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshotSets/{id}/appScreenshots" : {
      "get" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-appScreenshots-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshots", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments" : {
      "get" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-appStoreReviewAttachments-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations/{id}/appPreviewSets" : {
      "get" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-appPreviewSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[previewType]",
          "in" : "query",
          "description" : "filter by attribute 'previewType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IPHONE_65", "IPHONE_58", "IPHONE_55", "IPHONE_47", "IPHONE_40", "IPHONE_35", "IPAD_PRO_3GEN_129", "IPAD_PRO_3GEN_11", "IPAD_PRO_129", "IPAD_105", "IPAD_97", "DESKTOP", "WATCH_SERIES_4", "WATCH_SERIES_3", "APPLE_TV" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviews", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviews", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations/{id}/appScreenshotSets" : {
      "get" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-appScreenshotSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[screenshotDisplayType]",
          "in" : "query",
          "description" : "filter by attribute 'screenshotDisplayType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APP_IPHONE_65", "APP_IPHONE_58", "APP_IPHONE_55", "APP_IPHONE_47", "APP_IPHONE_40", "APP_IPHONE_35", "APP_IPAD_PRO_3GEN_129", "APP_IPAD_PRO_3GEN_11", "APP_IPAD_PRO_129", "APP_IPAD_105", "APP_IPAD_97", "APP_DESKTOP", "APP_WATCH_SERIES_4", "APP_WATCH_SERIES_3", "APP_APPLE_TV", "IMESSAGE_APP_IPHONE_65", "IMESSAGE_APP_IPHONE_58", "IMESSAGE_APP_IPHONE_55", "IMESSAGE_APP_IPHONE_47", "IMESSAGE_APP_IPHONE_40", "IMESSAGE_APP_IPAD_PRO_3GEN_129", "IMESSAGE_APP_IPAD_PRO_3GEN_11", "IMESSAGE_APP_IPAD_PRO_129", "IMESSAGE_APP_IPAD_105", "IMESSAGE_APP_IPAD_97" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshots", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshots", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/ageRatingDeclaration" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-ageRatingDeclaration-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreReviewDetail" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreReviewDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionLocalizations" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionPhasedRelease-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionSubmission" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionSubmission-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/build" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-build-get_to_one_relationship",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related linkage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionBuildLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-build-update_to_one_relationship",
        "requestBody" : {
          "description" : "Related linkage",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionBuildLinkageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/build" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/idfaDeclaration" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-idfaDeclaration-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[idfaDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type idfaDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "attributesActionWithPreviousAd", "attributesAppInstallationToPreviousAd", "honorsLimitedAdTracking", "servesAds" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdfaDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/routingAppCoverage" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-routingAppCoverage-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appInfos" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appInfos-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appInfoLocalizations", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfosResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appStoreVersions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appStoreVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[appStoreState]",
          "in" : "query",
          "description" : "filter by attribute 'appStoreState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DEVELOPER_REMOVED_FROM_SALE", "DEVELOPER_REJECTED", "IN_REVIEW", "INVALID_BINARY", "METADATA_REJECTED", "PENDING_APPLE_RELEASE", "PENDING_CONTRACT", "PENDING_DEVELOPER_RELEASE", "PREPARE_FOR_SUBMISSION", "PREORDER_READY_FOR_SALE", "PROCESSING_FOR_APP_STORE", "READY_FOR_SALE", "REJECTED", "REMOVED_FROM_SALE", "WAITING_FOR_EXPORT_COMPLIANCE", "WAITING_FOR_REVIEW", "REPLACED_WITH_NEW_VERSION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[versionString]",
          "in" : "query",
          "description" : "filter by attribute 'versionString'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[idfaDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type idfaDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "attributesActionWithPreviousAd", "attributesAppInstallationToPreviousAd", "honorsLimitedAdTracking", "servesAds" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "idfaDeclaration", "routingAppCoverage" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/availableTerritories" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-availableTerritories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaAppLocalizations" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaAppLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaAppReviewDetail" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaAppReviewDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaGroups" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaGroups-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaLicenseAgreement" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaLicenseAgreement-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/betaTesters" : {
      "delete" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaTesters-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppBetaTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/builds" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/endUserLicenseAgreement" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-endUserLicenseAgreement-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/gameCenterEnabledVersions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-gameCenterEnabledVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[versionString]",
          "in" : "query",
          "description" : "filter by attribute 'versionString'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "versionString", "-versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameCenterEnabledVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/inAppPurchases" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-inAppPurchases-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[inAppPurchaseType]",
          "in" : "query",
          "description" : "filter by attribute 'inAppPurchaseType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION", "NON_CONSUMABLE", "CONSUMABLE", "NON_RENEWING_SUBSCRIPTION", "FREE_SUBSCRIPTION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[canBeSubmitted]",
          "in" : "query",
          "description" : "filter by canBeSubmitted",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseType", "-inAppPurchaseType", "productId", "-productId", "referenceName", "-referenceName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/perfPowerMetrics" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-perfPowerMetrics-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[deviceType]",
          "in" : "query",
          "description" : "filter by attribute 'deviceType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[metricType]",
          "in" : "query",
          "description" : "filter by attribute 'metricType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DISK", "HANG", "BATTERY", "LAUNCH", "MEMORY", "ANIMATION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PerfPowerMetricsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/preOrder" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-preOrder-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/preReleaseVersions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-preReleaseVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreReleaseVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/prices" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-prices-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppLocalizations/{id}/app" : {
      "get" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewDetails/{id}/app" : {
      "get" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewSubmissions/{id}/build" : {
      "get" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaBuildLocalizations/{id}/build" : {
      "get" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/app" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/relationships/betaTesters" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupBetaTestersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/betaTesters" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/relationships/builds" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupBuildsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/builds" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaLicenseAgreements/{id}/app" : {
      "get" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/relationships/apps" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-apps-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterAppsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-apps-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/apps" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-apps-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/relationships/betaGroups" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterBetaGroupsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/betaGroups" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/relationships/builds" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterBuildsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/builds" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaDetails/{id}/build" : {
      "get" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/app" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/appEncryptionDeclaration" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appEncryptionDeclaration-get_to_one_relationship",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related linkage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appEncryptionDeclaration-update_to_one_relationship",
        "requestBody" : {
          "description" : "Related linkage",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/appEncryptionDeclaration" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appEncryptionDeclaration-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/appStoreVersion" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appStoreVersion-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appStoreReviewDetail", "appStoreState", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "downloadable", "earliestReleaseDate", "idfaDeclaration", "platform", "releaseType", "routingAppCoverage", "usesIdfa", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/betaAppReviewSubmission" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaAppReviewSubmission-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/betaBuildLocalizations" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaBuildLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/betaGroups" : {
      "post" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaGroups-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaGroups-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/buildBetaDetail" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-buildBetaDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/diagnosticSignatures" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-diagnosticSignatures-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[diagnosticType]",
          "in" : "query",
          "description" : "filter by attribute 'diagnosticType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DISK_WRITES" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[diagnosticSignatures]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type diagnosticSignatures",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "diagnosticType", "logs", "signature", "weight" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiagnosticSignaturesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/icons" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-icons-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildIconsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/individualTesters" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildIndividualTestersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildIndividualTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildIndividualTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/individualTesters" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/perfPowerMetrics" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-perfPowerMetrics-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[deviceType]",
          "in" : "query",
          "description" : "filter by attribute 'deviceType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[metricType]",
          "in" : "query",
          "description" : "filter by attribute 'metricType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DISK", "HANG", "BATTERY", "LAUNCH", "MEMORY", "ANIMATION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PerfPowerMetricsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/preReleaseVersion" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-preReleaseVersion-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrereleaseVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/app" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/bundleIdCapabilities" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-bundleIdCapabilities-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[bundleIdCapabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIdCapabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "capabilityType", "settings" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdCapabilitiesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/profiles" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-profiles-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfilesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/diagnosticSignatures/{id}/logs" : {
      "get" : {
        "tags" : [ "DiagnosticSignatures" ],
        "operationId" : "diagnosticSignatures-logs-get_to_many_related",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiagnosticLogsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/endUserLicenseAgreements/{id}/territories" : {
      "get" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-territories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions" : {
      "get" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "patch" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/gameCenterEnabledVersions/{id}/compatibleVersions" : {
      "get" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[versionString]",
          "in" : "query",
          "description" : "filter by attribute 'versionString'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "versionString", "-versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameCenterEnabledVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions/{id}/app" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions/{id}/builds" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/bundleId" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-bundleId-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/certificates" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-certificates-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/devices" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-devices-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/userInvitations/{id}/visibleApps" : {
      "get" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-visibleApps-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/users/{id}/relationships/visibleApps" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserVisibleAppsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/users/{id}/visibleApps" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfos", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "contentRightsDeclaration", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "prices", "primaryLocale", "sku" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related resources",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    }
  }
}